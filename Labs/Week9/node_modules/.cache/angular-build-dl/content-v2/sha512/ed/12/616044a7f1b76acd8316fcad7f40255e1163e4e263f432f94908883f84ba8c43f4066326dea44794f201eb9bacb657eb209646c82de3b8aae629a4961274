{"version":3,"sources":["webpack:///src/app/actor/actor.component.ts","webpack:///src/app/actor/actor.component.html","webpack:///src/app/deleteactor/deleteactor.component.ts","webpack:///src/app/deleteactor/deleteactor.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/listactors/listactors.component.ts","webpack:///src/app/listactors/listactors.component.html","webpack:///src/app/updateactor/updateactor.component.ts","webpack:///src/app/updateactor/updateactor.component.html","webpack:///src/app/addactor/addactor.component.ts","webpack:///src/app/addactor/addactor.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/database.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ActorComponent","dbService","actorsDB","moviesDB","section","fullName","bYear","actorId","mYear","mTitle","movieId","yearBefore","getActors","subscribe","data","obj","name","createActor","result","onGetActors","item","_id","updateActor","deleteActor","onGetMovies","sectionId","resetValues","title","year","createMovie","getMovies","deleteMovie","deleteMoviesBefore","addActorToMovie","id","changeSection","selector","templateUrl","styleUrls","DeleteactorComponent","environment","production","ListactorsComponent","console","log","UpdateactorComponent","router","navigate","AddactorComponent","onSaveActor","AppComponent","AppModule","declarations","imports","providers","bootstrap","httpOptions","headers","DatabaseService","http","get","url","post","put","movie","actor","providedIn","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n@Component({\n  selector: \"app-actor\",\n  templateUrl: \"./actor.component.html\",\n  styleUrls: [\"./actor.component.css\"],\n})\nexport class ActorComponent implements OnInit {\n  actorsDB: any[] = [];\n  moviesDB: any[] = [];\n  section = 1;\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  mYear: number = 0;\n  mTitle: string = \"\";\n  movieId: string = \"\";\n  yearBefore:number = 0;\n  constructor(private dbService: DatabaseService) {}\n  //Get all Actors\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Create a new Actor, POST request\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  // This lifecycle callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n    this.onGetMovies();\n  }\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.resetValues();\n  }\n  resetValues() {\n    this.fullName = \"\";\n    this.bYear = 0;\n    this.mTitle=\"\";\n    this.mYear = 0;\n    this.actorId = \"\";\n    this.movieId=\"\";\n  }\n  //Create a new Movie, POST request\n  onSaveMovie() {\n    let obj = { title: this.mTitle, year: this.mYear };\n    this.dbService.createMovie(obj).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n  //Get all Movies\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n  //Delete Movie\n  onDeleteMovie(item) {\n    this.dbService.deleteMovie(item._id).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n  onDeleteMovieBefore() {\n    this.dbService.deleteMoviesBefore(this.yearBefore).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n  onAddActorToMovie(){\n    this.dbService.addActorToMovie({id:this.movieId},{id:this.actorId}).subscribe(result => {\n      this.onGetMovies();\n      this.onGetActors();\n    });\n  }\n\n}","<div class=\"jumbotron text-center\">\n    <h1>Actors/Movies DB System</h1>\n  </div>\n  <!-- The navigation bar -->\n  <nav class=\"navbar navbar-expand-sm bg-light justify-content-center\">\n    <ul class=\"navbar-nav\">\n        <div class=\"btn-group nav-item\" role=\"group\" aria-label=\"Basic example\" style=\"padding-left:0.2in\">\n                <button class=\"btn btn-primary\" (click)=\"changeSection(1)\">Actors</button>\n   \n                <button class=\"btn btn-primary\" (click)=\"changeSection(2)\">Add Actor</button>\n                <button class=\"btn btn-primary\" (click)=\"changeSection(3)\">Update Actor</button>\n\n                <button class=\"btn btn-primary\" (click)=\"changeSection(4)\">Delete Actor</button>\n            </div>\n            <div class=\"btn-group nav-item\" role=\"group\" aria-label=\"Basic example\" style=\"padding-left:0.2in\">\n\n                <button class=\"btn btn-primary\" (click)=\"changeSection(7)\">Movies</button>\n\n                <button class=\"btn btn-primary\" (click)=\"changeSection(5)\">Add Movie</button>\n\n                <button class=\"btn btn-primary\" (click)=\"changeSection(6)\">Delete Movie</button>\n\n                <button class=\"btn btn-primary\" (click)=\"changeSection(8)\">Delete Movie Before Year</button>\n            </div>\n\n            <li style=\"padding-left:0.2in\">\n                <button class=\"btn btn-primary\" (click)=\"changeSection(9)\" >Add Actor to Movie</button>\n            </li>\n\n    </ul>\n  </nav>\n  <!-- First section: Display all in actors -->\n  <div class=\"section\" *ngIf=\"section==1\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n      </tr>\n    </table>\n  </div>\n  <!-- Second Section: Add new actor -->\n  <div class=\"section\" *ngIf=\"section==2\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n  </div>\n  <!-- Section 3: Update actor -->\n  <div class=\"section\" *ngIf=\"section==3\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"actorsDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"actorName\">Full Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">Update Actor</button>\n    </div>\n  </div>\n  <!-- Section 4: Delete Actor -->\n  <div class=\"section\" *ngIf=\"section==4\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onDeleteActor(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n    <!-- Section 5: Add Movie -->\n\n  <div class=\"section\" *ngIf=\"section==5\">\n    <div class=\"form-group\">\n      <label for=\"movieTitle\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"movieTitle\" [(ngModel)]=\"mTitle\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"movieYear\">Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"movieYear\" [(ngModel)]=\"mYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveMovie()\">Save Movie</button>\n  </div>\n  <!-- Section 6: Delete movie -->\n  <div class=\"section\" *ngIf=\"section==6\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onDeleteMovie(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n <!-- Section 7: Display all movies -->\n\n  <div class=\"section\" *ngIf=\"section==7\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n      </tr>\n    </table>\n  </div>\n <!-- Section 8: Delete movie by year -->\n\n <div class=\"section\" *ngIf=\"section==8\">\n    <div class=\"form-group\">\n      <label for=\"year\">Year</label>\n      <input type=\"text\" class=\"form-control\" id=\"year\" [(ngModel)]=\"yearBefore\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteMovieBefore()\">Delete all before {{yearBefore}}</button>\n  </div>\n\n  <!-- Section 9: Add an actor to a movie -->\n\n <div class=\"section\" *ngIf=\"section==9\">\n    <div class=\"form-group\">\n      <label for=\"actorId\">Actor</label>\n        <select class=\"form-control\" id=\"actorId\" [(ngModel)]=\"actorId\">\n            <option *ngFor=\"let item of actorsDB\"value={{item._id}} >{{item.name}}, {{item.bYear}}</option>\n        </select>\n        <label for=\"movieId\">Movie</label>\n        <select class=\"form-control\" id=\"movieId\" [(ngModel)]=\"movieId\">\n            <option *ngFor=\"let item of moviesDB\" value={{item._id}}>{{item.title}}, {{item.year}}</option>\n        </select>\n    </div>\n    <button *ngIf='!(actorId!=\"\"&&movieId!=\"\")' type=\"submit\" class=\"btn btn-primary\" disabled>Submit</button>\n    <button *ngIf='actorId!=\"\"&&movieId!=\"\"' type=\"submit\" class=\"btn btn-primary\" (click)=\"onAddActorToMovie()\">Submit</button>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deleteactor',\n  templateUrl: './deleteactor.component.html',\n  styleUrls: ['./deleteactor.component.css']\n})\nexport class DeleteactorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>deleteactor works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n@Component({\n  selector: \"app-listactors\",\n  templateUrl: \"./listactors.component.html\",\n  styleUrls: [\"./listactors.component.css\"],\n})\nexport class ListactorsComponent implements OnInit {\n  actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService) {}\n  ngOnInit() {\n    console.log(\"Hi From ListActors ngIOnit\");\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-updateactor\",\n  templateUrl: \"./updateactor.component.html\",\n  styleUrls: [\"./updateactor.component.css\"],\n})\nexport class UpdateactorComponent implements OnInit {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n   actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<p>updateactor works!</p>\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-addactor\",\n  templateUrl: \"./addactor.component.html\",\n  styleUrls: [\"./addactor.component.css\"],\n})\nexport class AddactorComponent {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n}","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Week9';\n}\n","<app-actor></app-actor>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"./app.component\";\nimport { ActorComponent } from \"./actor/actor.component\";\nimport { DatabaseService } from \"./database.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ListactorsComponent } from './listactors/listactors.component';\nimport { AddactorComponent } from './addactor/addactor.component';\nimport { UpdateactorComponent } from './updateactor/updateactor.component';\nimport { DeleteactorComponent } from './deleteactor/deleteactor.component';\n@NgModule({\n  declarations: [AppComponent, ActorComponent, ListactorsComponent, AddactorComponent, UpdateactorComponent, DeleteactorComponent],\n  imports: [BrowserModule, HttpClientModule, FormsModule],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent, ActorComponent],\n})\nexport class AppModule {}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n};\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n  getActors() {\n    return this.http.get(\"/actors\");\n  }\n  getActor(id: string) {\n    let url = \"/actors/\" + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    return this.http.post(\"/actors\", data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = \"/actors/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = \"/actors/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  getMovies() {\n    return this.http.get(\"/movies\");\n  }\n  createMovie(data) {\n    return this.http.post(\"/movies\", data, httpOptions);\n  }\n  deleteMovie(id) {\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  deleteMoviesBefore(year){\n    let url=\"/movies/before/\"+year;\n    return this.http.delete(url,httpOptions);\n  }\n  addActorToMovie(movie,actor){\n    let url = '/movies/'+movie.id+'/actors'\n    return this.http.post(url, actor, httpOptions)\n  }\n  \n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}