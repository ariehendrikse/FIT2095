{"version":3,"sources":["webpack:///src/app/deleteactor/deleteactor.component.ts","webpack:///src/app/deleteactor/deleteactor.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/listactors/listactors.component.ts","webpack:///src/app/listactors/listactors.component.html","webpack:///src/app/updateactor/updateactor.component.ts","webpack:///src/app/updateactor/updateactor.component.html","webpack:///src/app/addactor/addactor.component.ts","webpack:///src/app/addactor/addactor.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/database.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DeleteactorComponent","dbService","router","actorsDB","console","log","getActors","subscribe","data","item","deleteActor","_id","result","onGetActors","navigate","selector","templateUrl","styleUrls","environment","production","ListactorsComponent","UpdateactorComponent","fullName","bYear","actorId","name","obj","updateActor","AddactorComponent","createActor","onSaveActor","AppComponent","title","appRoutes","path","component","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","httpOptions","headers","DatabaseService","http","get","id","url","post","put","year","movie","actor","providedIn","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-deleteactor\",\n  templateUrl: \"./deleteactor.component.html\",\n  styleUrls: [\"./deleteactor.component.css\"],\n})\nexport class DeleteactorComponent implements OnInit {\n  actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n  // This callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteActor(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n@Component({\n  selector: \"app-listactors\",\n  templateUrl: \"./listactors.component.html\",\n  styleUrls: [\"./listactors.component.css\"],\n})\nexport class ListactorsComponent implements OnInit {\n  actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService) {}\n  ngOnInit() {\n    console.log(\"Hi From ListActors ngIOnit\");\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-updateactor\",\n  templateUrl: \"./updateactor.component.html\",\n  styleUrls: [\"./updateactor.component.css\"],\n})\nexport class UpdateactorComponent implements OnInit {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n   actorsDB: any[] = [];\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  //Get all Actors\n  onGetActors() {\n    console.log(\"From on GetActors\");\n    return this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n  ngOnInit() {\n    this.onGetActors();\n  }\n}","<div class=\"section\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Name</th>\n        <th>Birth Year</th>\n        <th>Select!</th>\n      </tr>\n      <tr *ngFor=\"let item of actorsDB\">\n        <td>{{item.name}}</td>\n        <td>{{item.bYear}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n      </tr>\n    </table>\n    <hr>\n    <div *ngIf=\"actorsDB.length>0\">\n      <div class=\"form-group\">\n        <label for=\"actorName\">Full Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"actorName\">Birth Year</label>\n        <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">Update Actor</button>\n    </div>\n  </div>","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-addactor\",\n  templateUrl: \"./addactor.component.html\",\n  styleUrls: [\"./addactor.component.css\"],\n})\nexport class AddactorComponent {\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  constructor(private dbService: DatabaseService, private router: Router) {}\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.router.navigate([\"/listactors\"]);\n    });\n  }\n}","<div class=\"section\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n  </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Week9';\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/listactors\" routerLinkActive=\"active\">List </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/addactor\" routerLinkActive=\"active\">Add </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/updateactor\" routerLinkActive=\"active\">Update</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/deleteactor\" routerLinkActive=\"active\">Delete</a>\n        </li>\n    </ul>\n</nav>\n<router-outlet></router-outlet>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"./app.component\";\nimport { DatabaseService } from \"./database.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ListactorsComponent } from \"./listactors/listactors.component\";\nimport { AddactorComponent } from \"./addactor/addactor.component\";\nimport { DeleteactorComponent } from \"./deleteactor/deleteactor.component\";\nimport { UpdateactorComponent } from \"./updateactor/updateactor.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nconst appRoutes: Routes = [\n  { path: \"listactors\", component: ListactorsComponent },\n  { path: \"addactor\", component: AddactorComponent },\n  { path: \"updateactor\", component: UpdateactorComponent },\n  { path: \"deleteactor\", component: DeleteactorComponent },\n  { path: \"\", redirectTo: \"/listactors\", pathMatch: \"full\" },\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListactorsComponent,\n    AddactorComponent,\n    UpdateactorComponent,\n    DeleteactorComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n};\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n  getActors() {\n    return this.http.get(\"/actors\");\n  }\n  getActor(id: string) {\n    let url = \"/actors/\" + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    return this.http.post(\"/actors\", data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = \"/actors/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = \"/actors/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  getMovies() {\n    return this.http.get(\"/movies\");\n  }\n  createMovie(data) {\n    return this.http.post(\"/movies\", data, httpOptions);\n  }\n  deleteMovie(id) {\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n  deleteMoviesBefore(year){\n    let url=\"/movies/before/\"+year;\n    return this.http.delete(url,httpOptions);\n  }\n  addActorToMovie(movie,actor){\n    let url = '/movies/'+movie.id+'/actors'\n    return this.http.post(url, actor, httpOptions)\n  }\n  \n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}